Constant named: #Main value: [:arguments |
    <localReturn>
    let out :=  FileStream stdout.
    out nextPutAll: 'Hello World'; lf.

    arguments do: [:arg |
        out nextPutAll: arg; lf
    ].

    out nextPutAll: 'Global namespace:'; lf.
    let namespace<_DynamicObject> := _GlobalNamespace.
    out print: namespace; lf.
    namespace variables keysAndValuesDo: [:name :var |
        out tab; print: name; tab; print: var; lf.
    ].
    
    out nextPutAll: 'Allclasses in the system:'; lf.

    ProtoObject withAllSubclassesDo: [:cls |
        out nextPutAll: cls name; lf
    ].

    ^ 0
].

Namespace named: #EntryPoint members: [
    Constant namedC: #main value: [<Int32> :argc<Int32> :argv<LibC ConstCString pointer> |
        <localReturn>
        let arguments := Array new: argc.
        1 to: argc do: [ :i |
            arguments at: i put: (argv at: i) readString
        ].

        ^ Main #{arguments} castTo: Int32
    ]
]
